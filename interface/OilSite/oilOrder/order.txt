#注意，由于订单涉及到活动、优惠券等，为了方便统一，活动、优惠券用活动叠加用例中的活动和优惠券，
#另外需要手动初始话用户
#1.先用老用户，再换新用户
#2.将微信和pc的header写入config
#3.运行mysite服务 python manage.py runserver

*** Settings ***
Library  ../../../lib/InterfaceRequest.py
Library  ../../../lib/tools.py
Suite Setup         setups
Suite Teardown     teardowns
Resource    ../userKeyWord.robot
*** Variables ***

${OilOrderOrderUrl}  /OilOrder/Order
${TicketListUrl}      /OilOrder/TicketList
${OilOrderPayOilUrl}   /OilOrder/PayOil
${DjangoRawSqlFunUrl}        http://localhost:8000/polls/raw_sql_fun
${DrpMemberCardPayPasswordReSetUrl}  /DrpMemberCard/PayPasswordReSet
${MyInfoUrl}     /My/Info
${DrpMemberOffLineAddCoinOrderUrl}      /DrpMemberOffLine/AddCoinOrder
${MyDrawCouponUrl}   /My/DrawCoupon
${UpdateMerchantSettingURL}     /DrpConfig/UpdateMerchantSetting
${MyPayPasswordInfoUrl}      /My/PayPasswordInfo
${DrpConfigUserLevelListUrl}     /DrpConfig/UserLevelList




${userId}   0
${paypwd}   123456
${paypwdEncoded}    e10adc3949ba59abbe56e057f20f883e

${coupon_id1}   622
${coupon_id2}   623
${coupon_id3}   624
${coupon_id4}   625

${gun_id}   14403


${score_rate_qiyou}     0

*** Keywords ***
setups
    ${header}=      read config     header
    ${PcHeader}=    read config     PcHeader
    ${mobile}=      read config     mobile

    #    准备活动
    sql interface post raw   ${DjangoRawSqlFunUrl}   {"SQL":"UPDATE${SPACE}pit_oil_site_activity${SPACE}SET${SPACE}activity_status=0"}
    sql interface post raw   ${DjangoRawSqlFunUrl}   {"SQL":"UPDATE${SPACE}pit_oil_site_activity${SPACE}SET${SPACE}activity_status=1${SPACE}WHERE${SPACE}id${SPACE}in${SPACE}(496,497,498,499,500,501);"}

    #    获取用户id
    ${res}=     interface post      ${MyInfoUrl}    {"r":"0.3490340368105973"}      ${header}
    ${userId}=      should match regexp     ${res}      "id":\\d+
    ${userId}=      should match regexp     ${userId}      \\d+

    #    设置用户密码，密码为123456
    pc interface post  ${DrpMemberCardPayPasswordReSetUrl}      {"paypwd": "e10adc3949ba59abbe56e057f20f883e", "repaypwd": "e10adc3949ba59abbe56e057f20f883e", "note": "", "userID": "${userId}"}   ${PcHeader}
    should contain   ${res}     "code":1,


    #    充值(充值活动全部禁用)
    sql interface post raw   ${DjangoRawSqlFunUrl}   {"SQL":"UPDATE${SPACE}pit_member_coin_activity${SPACE}SET${SPACE}status=2;"}
    ${res}=     pc interface post  ${DrpMemberOffLineAddCoinOrderUrl}   {"user_id": "${userId}", "org_amt": "1000", "give_amt": "0", "active_id": "", "note": "", "pay_method_id": "1"}  ${PcHeader}
    should contain   ${res}     "code":1,

    drawCoupon  ${coupon_id1}
    drawCoupon  ${coupon_id2}
    drawCoupon  ${coupon_id3}
    drawCoupon  ${coupon_id4}


#临时的teardown
teardowns
    ${header}=      read config     header
    ${PcHeader}=    read config     PcHeader
    #油站活动重置为禁用
    sql interface post raw   ${DjangoRawSqlFunUrl}   {"SQL":"UPDATE${SPACE}pit_oil_site_activity${SPACE}SET${SPACE}activity_status=0"}

    clearUserCoupon


#这个用例的限制包括：
#1.支付方式只有会员卡支付
#2.订单状态只有待付款-已付款
#3.油品只有汽油
#4.包含了活动叠加的验证
#5.预期结果只有积分、成长值、余额
order_tmplate
    [Arguments]      ${org_amt}     ${is_allow_superimposed}      ${expect}

    #程序限制不能频繁下单
    sleep  10

    ${header}=      read config     header
    ${PcHeader}=    read config     PcHeader
    ${mobile}=      read config     mobile

    UpdateMerchantSetting   ${is_allow_superimposed}    ${PcHeader}

    ${res}=     TicketList      ${org_amt}      ${header}
    ${dic}=     evaluate  json.loads(u'${res}')   json

    ${amt_after_reduce}=    set variable     ${dic}[data][ReadyPayMoney][amt_after_reduce]
    ${expect}=  evaluate    float(${expect})
    should be equal     ${amt_after_reduce}    ${expect}

    #    从返回结果中，选择活动、优惠券等，这里暂直接选择最佳
    ${ReadyPayMoney}=   should match regexp     ${res}  "ReadyPayMoney":.+

    ${direct_id}=   should match regexp    ${ReadyPayMoney}      "direct_id":\\d+
    ${direct_id}=   should match regexp    ${direct_id}      \\d+

    ${site_direct_cut_amt}=     should match regexp   ${ReadyPayMoney}      "site_direct_cut_amt":\\d+.\\d+
    ${site_direct_cut_amt}=     should match regexp   ${site_direct_cut_amt}      \\d+.\\d+

    ${activity_id}=     should match regexp    ${ReadyPayMoney}      "activity_id":\\d+
    ${activity_id}=     should match regexp    ${activity_id}      \\d+

    ${site_activity_amt}=     should match regexp   ${ReadyPayMoney}      "site_activity_amt":\\d+.\\d+
    ${site_activity_amt}=     should match regexp   ${site_activity_amt}      \\d+.\\d+

    #   处理直降与满减/折扣的叠加限制
    run keyword if      ${site_direct_cut_amt}==0     set test variable      ${direct_id}      ${EMPTY}
    run keyword if      ${site_activity_amt}==0    set test variable      ${activity_id}      ${EMPTY}


    ${coupon_id}=   should match regexp    ${ReadyPayMoney}      "coupon_id":\\d+
    ${coupon_id}=   should match regexp    ${coupon_id}      \\d+

    ${real_score_amt}=      should match regexp    ${ReadyPayMoney}      "real_score_amt":\\d+
    ${real_score_amt}=      should match regexp    ${real_score_amt}      \\d+

    ${nogas_amt}=   should match regexp    ${ReadyPayMoney}      "nogas_amt":\\d+
    ${nogas_amt}=   should match regexp    ${nogas_amt}      \\d+

    ${coupon_nogas_id}=     should match regexp    ${ReadyPayMoney}      "coupon_nogas_id":\\d+
    ${coupon_nogas_id}=     should match regexp    ${coupon_nogas_id}      \\d+

    ${real_coin_amt}=     should match regexp    ${ReadyPayMoney}      "real_coin_amt":\\d+
    ${real_coin_amt}=     should match regexp    ${real_coin_amt}      \\d+

    ${real_pay_amt}=    should match regexp    ${ReadyPayMoney}      "real_pay_amt":\\d+.\\d+
    ${real_pay_amt}=    should match regexp    ${real_pay_amt}      \\d+.\\d+

    #获取用户信息，验证积分，成长值
    ${res}=     MyInfo      ${header}
    ${dic}=     evaluate  json.loads(u'${res}')   json

    ${growth_level}     set variable     ${dic}[data][growth_level]
    ${growth_value_before}     set variable     ${dic}[data][growth_value]
    ${coin_balance_before}     set variable     ${dic}[data][coin_balance]
    ${score_balance_before}    set variable     ${dic}[data][score_balance]

    ${res}=     DrpConfigUserLevelList    ${PcHeader}
    ${dic}=     evaluate  json.loads(u'${res}')   json
    @{tmp_list}=    evaluate  list(${dic}[data])

    :FOR    ${userLevel}    IN   @{tmp_list}
    \    run keyword if    ${userLevel}[growth_level]==${growth_level}      set test variable    ${score_rate_qiyou}     ${userLevel}[score_rate_qiyou]

    #   提交订单
    ${pay_password}=    payPassword     ${amt_after_reduce}     ${header}

    ${res}=     interface post     ${OilOrderOrderUrl}    {"site_id": "35", "gun_id": "${gun_id}", "direct_id": "${direct_id}", "activity_id": "${activity_id}", "platform_activity_id": "", "coupon_id": "${coupon_id}", "org_amt": "${org_amt}", "real_score_amt": "${real_score_amt}", "real_coin_amt": "${real_pay_amt}", "nogas_amt": "${nogas_amt}", "coupon_nogas_id": "${coupon_nogas_id}", "real_pay_amt": "${real_coin_amt}", "pay_password": "${pay_password}", "app_client_type": "1", "r": "0.8897545249754606"}    ${header}
    ${order_id}=     reg draw    ${res}      id
    ${dic}=     evaluate  json.loads(u'${res}')   json
    ${org_oil_litre}   set variable     ${dic}[data][org_oil_litre]

    ${res}=     MyInfo      ${header}
    ${dic}=     evaluate  json.loads(u'${res}')   json
    #余额判定
    ${coin_balance_after}     set variable     ${dic}[data][coin_balance]
    ${amt_after_reduce}=    evaluate   float(${amt_after_reduce})
    ${coin_balance_add_exp}=   set variable     ${amt_after_reduce}
    ${coin_balance_add_real}=   evaluate     ${coin_balance_before}-${coin_balance_after}
    should be equal     ${coin_balance_add_exp}    ${coin_balance_add_real}

    ${growth_value_after}     set variable     ${dic}[data][growth_value]
    should be equal     ${growth_value_after}    ${growth_value_before}


    ${score_balance_after}    set variable     ${dic}[data][score_balance]
    should be equal     ${score_balance_after}      ${score_balance_before}

    #    支付订单
    ${pay_password}=    payPassword     ${order_id}     ${header}

    ${res}=     interface post   ${OilOrderPayOilUrl}     {"order_id": "${order_id}", "pay_method_id": "1", "pay_password": "${pay_password}", "real_coin_amt": "${amt_after_reduce}", "r": "0.778164654777834"}    ${header}
    should contain      ${res}      "code":1,

    ${res}=     MyInfo      ${header}
    ${dic}=     evaluate  json.loads(u'${res}')   json
    ${score_balance_after}    set variable     ${dic}[data][score_balance]
    ${growth_value_after}     set variable     ${dic}[data][growth_value]


    #预期增加积分，需要截断取整
    ${score_balance_add_exp}=   evaluate    int(${org_oil_litre}*${score_rate_qiyou})
    ${score_balance_add_real}=   evaluate    ${score_balance_after}-${score_balance_before}
    should be equal  ${score_balance_add_exp}   ${score_balance_add_real}

    #成长值，汽油是乘以10，柴油乘以5
    ${growth_value_add_exp}=   evaluate    int(${org_oil_litre}*10)
    ${growth_value_add_real}=   evaluate    ${growth_value_after}-${growth_value_before}
    should be equal  ${growth_value_add_exp}   ${growth_value_add_real}

    #余额判定
    ${coin_balance_after}     set variable     ${dic}[data][coin_balance]
    ${amt_after_reduce}=    evaluate   float(${amt_after_reduce})
    ${coin_balance_add_exp}=   set variable     ${amt_after_reduce}
    ${coin_balance_add_real}=   evaluate     ${coin_balance_before}-${coin_balance_after}
    should be equal     ${coin_balance_add_exp}    ${coin_balance_add_real}

*** Test Cases ***

Class_01
    [Template]  order_tmplate
    1   1   0
    10  1   0
    20  1   0
    30  1   0
    50  1   15
    100     1   45
    200     1   105
    300     1   129
    400     1   110

Class_02
    [Template]  order_tmplate
    1   0   0
    10  0   0
    20  0   0
    30  0   0.5
    50  0   20
    100     0   60
    200     0   120
    300     0   189
    400     0   190


