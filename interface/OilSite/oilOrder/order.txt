#注意，由于订单涉及到活动、优惠券等，为了方便统一，活动、优惠券用活动叠加用例中的活动和优惠券，
#另外需要手动初始话用户及领取优惠券
#1.准备新用户（老用户另外用一个脚本来执行验证）将手机号写入到config文件中
#2.将微信和pc的header写入config
#3.运行mysite服务 python manage.py runserver



*** Settings ***
Library  ../../../lib/InterfaceRequest.py
Library  ../../../lib/tools.py
Suite Setup     setups
Suite Teardown      teardowns

*** Variables ***

${OilOrderOrderUrl}  /OilOrder/Order
${TicketListUrl}      /OilOrder/TicketList
${OilOrderPayOilUrl}   /OilOrder/PayOil
${DjangoRawSqlFunUrl}        http://localhost:8000/polls/raw_sql_fun
${DrpMemberCardPayPasswordReSetUrl}  /DrpMemberCard/PayPasswordReSet
${MyInfoUrl}     /My/Info
${DrpMemberOffLineAddCoinOrderUrl}      /DrpMemberOffLine/AddCoinOrder
${MyDrawCouponUrl}   /My/DrawCoupon
${UpdateMerchantSettingURL}     /DrpConfig/UpdateMerchantSetting
${MyPayPasswordInfoUrl}      /My/PayPasswordInfo

${param}    {"site_id": "35", "gun_id": "14403", "direct_id": "", "activity_id": "499", "platform_activity_id": "0", "coupon_id": "0", "org_amt": "10", "real_score_amt": "5", "real_coin_amt": "0", "nogas_amt": "", "coupon_nogas_id": "0", "real_pay_amt": "0", "pay_password": "cb2f9256adaa70ba37eae72f1e07fcba", "app_client_type": "1", "r": "0.8954788928397364"}



${userId}   0
${paypwd}   123456
${paypwdEncoded}    e10adc3949ba59abbe56e057f20f883e

${coupon_id1}   622
${coupon_id2}   623
${coupon_id3}   624
${coupon_id4}   625

${gun_id}   14403


*** Keywords ***
setups
    ${header}=      read config     header
    ${PcHeader}=    read config     PcHeader
    ${mobile}=      read config     mobile

    #    准备活动
    sql interface post raw   ${DjangoRawSqlFunUrl}   {"SQL":"UPDATE${SPACE}pit_oil_site_activity${SPACE}SET${SPACE}activity_status=0"}
    sql interface post raw   ${DjangoRawSqlFunUrl}   {"SQL":"UPDATE${SPACE}pit_oil_site_activity${SPACE}SET${SPACE}activity_status=1${SPACE}WHERE${SPACE}id${SPACE}in${SPACE}(496,497,498,499,500,501);"}

    #    获取用户id
    ${res}=     interface post      ${MyInfoUrl}    {"r":"0.3490340368105973"}      ${header}
    ${userId}=      should match regexp     ${res}      "id":\\d+
    ${userId}=      should match regexp     ${userId}      \\d+

    #    设置用户密码，密码为123456
    pc interface post  ${DrpMemberCardPayPasswordReSetUrl}      {"paypwd": "e10adc3949ba59abbe56e057f20f883e", "repaypwd": "e10adc3949ba59abbe56e057f20f883e", "note": "", "userID": "${userId}"}
    should contain   ${res}     "code":1,


    #    充值(充值活动暂不考虑？)
    ${res}=     pc interface post  ${DrpMemberOffLineAddCoinOrderUrl}   {"user_id": "${userId}", "org_amt": "1000", "give_amt": "0", "active_id": "", "note": "", "pay_method_id": "1"}  ${PcHeader}
    should contain   ${res}     "code":1,

    #    领券
    interface post      ${MyDrawCouponUrl}      {"coupon_id": "${coupon_id1}", "r": "0.465362035318329"}      ${header}
    should contain   ${res}     "code":1,

    interface post      ${MyDrawCouponUrl}      {"coupon_id": "${coupon_id2}", "r": "0.465362035318329"}      ${header}
    should contain   ${res}     "code":1,

    interface post      ${MyDrawCouponUrl}      {"coupon_id": "${coupon_id3}", "r": "0.465362035318329"}      ${header}
    should contain   ${res}     "code":1,

    interface post      ${MyDrawCouponUrl}      {"coupon_id": "${coupon_id4}", "r": "0.465362035318329"}      ${header}
    should contain   ${res}     "code":1,


#临时的teardown
teardowns
    sql interface post raw   ${DjangoRawSqlFunUrl}   {"SQL":"UPDATE${SPACE}pit_oil_site_activity${SPACE}SET${SPACE}activity_status=0"}
#    sql interface post raw   ${DjangoRawSqlFunUrl}   {"SQL":"UPDATE${SPACE}pit_oil_site_activity${SPACE}SET${SPACE}activity_status=1${SPACE}WHERE${SPACE}id${SPACE}in${SPACE}(523);"}



order_tmplate
    [Arguments]      ${org_amt}     ${is_allow_superimposed}      ${expect}
    ${header}=      read config     header
    ${PcHeader}=    read config     PcHeader
    ${mobile}=      read config     mobile

    pc_interface_post      ${UpdateMerchantSettingURL}    {"can_add_balance": "1", "can_use_coin": "1", "can_use_carnumber_pay": "1", "can_use_balance_pay": "1", "can_use_coin_pay_notoil": "1", "is_allow_superimposed": "${is_allow_superimposed}", "can_use_score_mall": "1", "can_use_fleet_card": "1"}    ${PcHeader}

    ${res}=     interface post      ${TicketListUrl}      {"site_id": "35", "gun_id": "14403", "org_amt": "${org_amt}", "nogas_amt": "", "app_client_type": "1", "r": "0.6673226578129476"}       ${header}
    ${amt_after_reduce}=    reg draw     ${res}     amt_after_reduce
    should be equal     ${amt_after_reduce}    ${expect}

    #    从返回结果中，选择活动、优惠券等，这里暂直接选择最佳
    ${ReadyPayMoney}=   should match regexp     ${res}  "ReadyPayMoney":.+

    ${direct_id}=   should match regexp    ${ReadyPayMoney}      "direct_id":\\d+
    ${direct_id}=   should match regexp    ${direct_id}      \\d+

    ${site_direct_cut_amt}=     should match regexp   ${ReadyPayMoney}      "site_direct_cut_amt":\\d+.\\d+
    ${site_direct_cut_amt}=     should match regexp   ${site_direct_cut_amt}      \\d+.\\d+

    ${activity_id}=     should match regexp    ${ReadyPayMoney}      "activity_id":\\d+
    ${activity_id}=     should match regexp    ${activity_id}      \\d+

    ${site_activity_amt}=     should match regexp   ${ReadyPayMoney}      "site_activity_amt":\\d+.\\d+
    ${site_activity_amt}=     should match regexp   ${site_activity_amt}      \\d+.\\d+

    #   处理直降与满减/折扣的叠加限制


#    Set Global Variable
#
#    使用范围：在所有测试套件中都可以使用该关键字定义的变量。
#
#
#
#Set Suite Variable
#
#    使用范围：使用此关键字设置的变量在当前执行的测试套件的范围内随处可用。
#
#Set Test Variable
#
#    使用范围：使用此关键字设置的变量在当前执行的测试用例的范围内随处可用
#
#Set Variable
#
#    使用范围：该关键字主要用于设置标量变量。此外，它可用于将包含列表的标量变量转换为列表变量或多个标量变量。建议在创建新列表时使用创建列表。使用此关键字创建的变量仅在创建它们的范围内可用

    run keyword if      ${site_direct_cut_amt}==0     set test variable      ${direct_id}      ${EMPTY}
    run keyword if      ${site_activity_amt}==0    set test variable      ${activity_id}      ${EMPTY}
    log  ${direct_id}
    log  ${activity_id}
    #    run keyword if      ${site_direct_cut_amt}==0.00   set variable    ${direct_id}      ${EMPTY}
    #    run keyword if      ${site_activity_amt}==0.00    set variable    ${activity_id}      ${EMPTY}

    #    ${platform_activity}=    should match regexp    ${ReadyPayMoney}      "platform_activity":.+
    #    ${platform_activity}=    should match regexp    ${platform_activity}      \\d+


    ${coupon_id}=   should match regexp    ${ReadyPayMoney}      "coupon_id":\\d+
    ${coupon_id}=   should match regexp    ${coupon_id}      \\d+

    ${real_score_amt}=      should match regexp    ${ReadyPayMoney}      "real_score_amt":\\d+
    ${real_score_amt}=      should match regexp    ${real_score_amt}      \\d+

    ${nogas_amt}=   should match regexp    ${ReadyPayMoney}      "nogas_amt":\\d+
    ${nogas_amt}=   should match regexp    ${nogas_amt}      \\d+

    ${coupon_nogas_id}=     should match regexp    ${ReadyPayMoney}      "coupon_nogas_id":\\d+
    ${coupon_nogas_id}=     should match regexp    ${coupon_nogas_id}      \\d+

    ${real_coin_amt}=     should match regexp    ${ReadyPayMoney}      "real_coin_amt":\\d+
    ${real_coin_amt}=     should match regexp    ${real_coin_amt}      \\d+

    ${real_pay_amt}=    should match regexp    ${ReadyPayMoney}      "real_pay_amt":\\d+.\\d+
    ${real_pay_amt}=    should match regexp    ${real_pay_amt}      \\d+.\\d+

    #   提交订单
    #password = md5(md5(md5(this.passwordToken) + md5(str2)) + md5(parseInt(this.realCoinAmt) + ''))
    ${res}=   interface post      ${mypaypasswordinfourl}   ${EMPTY}     ${header}
    ${passwordToken}=   should match regexp    ${res}    "password_token":"\\w+
    ${passwordToken}=   should match regexp    ${passwordToken}    :"\\w+
    ${passwordToken}=   should match regexp    ${passwordToken}    \\w+
    ${pay_password}=    gzh pay password encode     ${passwordToken}    ${paypwd}     ${amt_after_reduce}

    ${res}=     interface post     ${OilOrderOrderUrl}    {"site_id": "35", "gun_id": "${gun_id}", "direct_id": "${direct_id}", "activity_id": "${activity_id}", "platform_activity_id": "", "coupon_id": "${coupon_id}", "org_amt": "${org_amt}", "real_score_amt": "${real_score_amt}", "real_coin_amt": "${real_pay_amt}", "nogas_amt": "${nogas_amt}", "coupon_nogas_id": "${coupon_nogas_id}", "real_pay_amt": "${real_coin_amt}", "pay_password": "${pay_password}", "app_client_type": "1", "r": "0.8897545249754606"}    ${header}
    ${order_id}=     reg draw    ${res}      id

    #    支付订单
    #password2 = md5(md5(md5(this.passwordToken) + md5(str2)) + md5(this.order_id + ''))
    ${res}=   interface post      ${mypaypasswordinfourl}   ${EMPTY}     ${header}
    ${passwordToken}=   should match regexp    ${res}    "password_token":"\\w+
    ${passwordToken}=   should match regexp    ${passwordToken}    :"\\w+
    ${passwordToken}=   should match regexp    ${passwordToken}    \\w+
    ${pay_password}=    gzh pay password encode     ${passwordToken}    ${paypwd}     ${order_id}

    ${res}=     interface post   ${OilOrderPayOilUrl}     {"order_id": "${order_id}", "pay_method_id": "1", "pay_password": "${pay_password}", "real_coin_amt": "${amt_after_reduce}", "r": "0.778164654777834"}    ${header}
    should contain      ${res}      "code":1,

    sleep  10
*** Test Cases ***

Class_01
    [Template]  order_tmplate
    1   1   0
    10  1   0
    20  1   0
    30  1   0
    50  1   15
    100     1   45
    200     1   105
    300     1   129
    400     1   110

Class_02
    [Template]  order_tmplate
    1   0   0
    10  0   0
    20  0   0
    30  0   0
    50  0   20
    100     0   60
    200     0   120
    300     0   189
    400     0   190


